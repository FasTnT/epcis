<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDatabaseZipped" xml:space="preserve">
    <value>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</value>
    <comment>GZIP script of the SQL database schema and tables. (try http://www.txtwizard.net/compression for decompression)</comment>
  </data>
  <data name="DropDatabaseZipped" xml:space="preserve">
    <value>H4sIAAAAAAAAC3u/e79LkH+AQrCzh6uvo4Knm4JrhGdwSLBCcVJKhoKzY7Czo4urNS8XdkXJiTk5SYnJ2QQVFpcmFScXZRaUZObnFRM2NqmMoJrUguRMwiaVFqcWIVQBAOPdp4/tAAAA</value>
  </data>
  <data name="EventQuery" xml:space="preserve">
    <value>SELECT request.record_time as capture_time, event.id, event_type as type, event.record_time as event_time, action, read_point, event_timezone_offset, disposition, business_location, business_step, transformation_id, event.event_id, declaration_time, reason FROM epcis.event JOIN epcis.request on request.id = event.request_id LEFT JOIN epcis.error_declaration ed ON event.id = ed.event_id /**where**/ /**orderby**/ LIMIT @limit</value>
  </data>
  <data name="RelatedQuery" xml:space="preserve">
    <value>SELECT event_id, epc as id, type, is_quantity, quantity, unit_of_measure FROM epcis.epc WHERE event_id = ANY(@EventIds);
SELECT event_id, field_id as id, parent_id, namespace, name, type, text_value, numeric_value, date_value FROM epcis.custom_field WHERE event_id = ANY(@EventIds);
SELECT event_id, transaction_type as type, transaction_id as id FROM epcis.business_transaction WHERE event_id = ANY(@EventIds);
SELECT event_id, type, source_dest_id as id, direction FROM epcis.source_destination WHERE event_id = ANY(@EventIds);
SELECT event_id, corrective_eventid as corrective_id FROM epcis.error_declaration_eventid WHERE event_id = ANY(@EventIds);</value>
  </data>
  <data name="StoreBusinessTransaction" xml:space="preserve">
    <value>INSERT INTO epcis.business_transaction(event_id, transaction_type, transaction_id) VALUES (@EventId, @Type, @Id);</value>
  </data>
  <data name="StoreCustomField" xml:space="preserve">
    <value>INSERT INTO epcis.custom_field(event_id, field_id, parent_id, namespace, name, type, text_value, numeric_value, date_value) VALUES (@EventId, @Id, @ParentId, @Namespace, @Name, @Type, @TextValue, @NumericValue, @DateValue);</value>
  </data>
  <data name="StoreEpcs" xml:space="preserve">
    <value>INSERT INTO epcis.epc(event_id, epc, type, is_quantity, quantity, unit_of_measure) VALUES (@EventId, @Id, @Type, @IsQuantity, @Quantity, @UnitOfMeasure);</value>
  </data>
  <data name="StoreErrorDeclaration" xml:space="preserve">
    <value>INSERT INTO epcis.error_declaration(event_id, declaration_time, reason) VALUES(@EventId, @DeclarationTime, @Reason);</value>
  </data>
  <data name="StoreErrorDeclarationIds" xml:space="preserve">
    <value>INSERT INTO epcis.error_declaration_eventid(event_id, corrective_eventid) VALUES(@EventId, @CorrectiveId);</value>
  </data>
  <data name="StoreEvent" xml:space="preserve">
    <value>INSERT INTO epcis.event(id, request_id, record_time, action, event_type, event_timezone_offset, business_location, business_step, disposition, read_point, transformation_id, event_id) VALUES(@Id, @RequestId, @EventTime, @Action, @Type, @EventTimeZoneOffset, @BusinessLocation, @BusinessStep, @Disposition, @ReadPoint, @TransformationId, @EventId);</value>
  </data>
  <data name="StoreRequest" xml:space="preserve">
    <value>INSERT INTO epcis.request(id, document_time, record_time, user_id) VALUES(@Id, @DocumentTime, @RecordTime, @UserId);</value>
  </data>
  <data name="StoreSourceDestination" xml:space="preserve">
    <value>INSERT INTO epcis.source_destination(event_id, type, source_dest_id, direction) VALUES (@EventId, @Type, @Id, @Direction);</value>
  </data>
  <data name="SubscriptionStore" xml:space="preserve">
    <value>INSERT INTO subscriptions.subscription(id, subscription_id, trigger, initial_record_time, report_if_empty, destination, query_name,  active, schedule_seconds, schedule_minutes, schedule_hours, schedule_month, schedule_day_of_month, schedule_day_of_week) VALUES(@Id, @SubscriptionId, @Trigger, @InitialRecordTime, @ReportIfEmpty, @Destination, @QueryName, @Active, @Second, @Minute, @Hour, @Month, @DayOfMonth, @DayOfWeek);</value>
  </data>
  <data name="SubscriptionAcknowledgePendingRequests" xml:space="preserve">
    <value>DELETE FROM subscriptions.pendingrequest WHERE subscription_id = (SELECT id FROM subscriptions.subscription WHERE subscription_id = @SubscriptionId) AND request_id = ANY(@RequestId)</value>
  </data>
  <data name="SubscriptionDelete" xml:space="preserve">
    <value>DELETE from subscriptions.subscription WHERE subscription_id = @Id;</value>
  </data>
  <data name="SubscriptionListIds" xml:space="preserve">
    <value>SELECT s.id, s.subscription_id, s.query_name, s.active FROM subscriptions.subscription s</value>
  </data>
  <data name="SubscriptionListPendingRequestIds" xml:space="preserve">
    <value>SELECT pr.request_id FROM subscriptions.pendingrequest pr JOIN subscriptions.subscription s ON s.id = pr.subscription_id WHERE s.subscription_id = @SubscriptionId</value>
  </data>
  <data name="SubscriptionsList" xml:space="preserve">
    <value>SELECT s.id, s.destination, s.subscription_id, s.query_name, s.active, s.trigger, s.report_if_empty, s.schedule_minutes, s.schedule_seconds, s.schedule_hours, s.schedule_month, s.schedule_day_of_month, s.schedule_day_of_week FROM subscriptions.subscription s</value>
  </data>
  <data name="SubscriptionStoreParameter" xml:space="preserve">
    <value>INSERT INTO subscriptions.parameter(id, subscription_id, name) VALUES(@Id, @SubscriptionId, @Name)</value>
  </data>
  <data name="SubscriptionStoreParameterValue" xml:space="preserve">
    <value>INSERT INTO subscriptions.parameter_value(id, parameter_id, value) VALUES(@Id, @ParameterId, @Value);</value>
  </data>
  <data name="SubscriptionListParameters" xml:space="preserve">
    <value>SELECT p.subscription_id, p.name, pv.value FROM subscriptions.parameter p INNER JOIN subscriptions.parameter_value pv ON pv.parameter_id = p.id</value>
  </data>
  <data name="SubscriptionStoreTrigger" xml:space="preserve">
    <value>INSERT INTO subscriptions.trigger(id, subscription_id, trigger_time, status, reason) VALUES(@Id, (SELECT id FROM subscriptions.subscription WHERE subscription_id = @SubscriptionId), NOW(), @Status, @Reason);</value>
  </data>
  <data name="MasterDataAttributeInsert" xml:space="preserve">
    <value>INSERT INTO cbv.attribute(masterdata_id, masterdata_type, id, value) VALUES(@ParentId, @ParentType, @Id, @Value) ON CONFLICT ON CONSTRAINT pk_cbv_masterdata_attribute DO UPDATE SET value = @Value;</value>
  </data>
  <data name="MasterDataInsert" xml:space="preserve">
    <value>INSERT INTO cbv.masterdata(id, type, created_on, last_update) VALUES(@Id, @Type, NOW(), NOW()) ON CONFLICT ON CONSTRAINT pk_cbv_masterdata DO UPDATE SET last_update = NOW();</value>
  </data>
  <data name="MasterDataQuery" xml:space="preserve">
    <value>SELECT md.type, md.id FROM cbv.masterdata md /**where**/ ORDER BY md.last_update DESC LIMIT @limit</value>
  </data>
  <data name="UserLoadByName" xml:space="preserve">
    <value>SELECT id, username, password FROM users.user WHERE username = @Username</value>
  </data>
  <data name="MasterDataHierarchyInsert" xml:space="preserve">
    <value>INSERT INTO cbv.hierarchy(type, parent_id, children_id) VALUES(@Type, @ParentId, @ChildrenId);</value>
  </data>
  <data name="MasterDataAttributeFieldInsert" xml:space="preserve">
    <value>INSERT INTO cbv.attribute_field(internal_id, internal_parent_id, masterdata_id, masterdata_type, parent_id, name, namespace, value) VALUES(@Id, @InternalParentId, @MasterdataId, @MasterdataType, @ParentId, @Name, @Namespace, @Value);</value>
  </data>
  <data name="MasterDataDelete" xml:space="preserve">
    <value>DELETE FROM cbv.attribute_field WHERE masterdata_type = @Type AND masterdata_id = @Id; DELETE FROM cbv.hierarchy WHERE type = @Type AND (parent_id = @Id OR children_id = @Id); DELETE FROM cbv.attribute WHERE masterdata_id = @Id AND masterdata_type = @Type; DELETE FROM cbv.masterdata WHERE id = @Id AND type = @Type;</value>
  </data>
  <data name="MasterDataAttributeQuery" xml:space="preserve">
    <value>SELECT masterdata_type AS parent_type, masterdata_id AS parent_id, id, value FROM cbv.attribute WHERE masterdata_id = ANY(@Ids) AND id = ANY(@Attributes)</value>
  </data>
  <data name="MasterDataAllAttributeQuery" xml:space="preserve">
    <value>SELECT masterdata_type AS parent_type, masterdata_id AS parent_id, id, value FROM cbv.attribute WHERE masterdata_id = ANY(@Ids)</value>
  </data>
  <data name="StoreQueryCallback" xml:space="preserve">
    <value>INSERT INTO callback.query_callback(id, request_id, subscription_id, callback_type) VALUES(@Id, @RequestId, @SubscriptionId, @CallbackType);</value>
  </data>
  <data name="StoreStandardHeader" xml:space="preserve">
    <value>INSERT INTO sbdh.standardheader(id, version, standard, type_version, identifier, type, creation_datetime) VALUES(@Id, @Version, @Standard, @TypeVersion, @InstanceIdentifier, @Type, @CreationDateTime);</value>
  </data>
  <data name="StoreStandardHeaderContactInformations" xml:space="preserve">
    <value>INSERT INTO sbdh.contactinformation(id, header_id, type, identifier, contact, email, fax_number, phone_number, type_identifier) VALUES(@Id, @HeaderId, @Type, @Identifier, @Contact, @EmailAddress, @FaxNumber, @TelephoneNumber, @ContactTypeIdentifier);</value>
  </data>
</root>
