<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDatabaseZipped" xml:space="preserve">
    <value>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</value>
    <comment>GZIP script of the SQL database schema and tables. (try http://www.txtwizard.net/compression for decompression)</comment>
  </data>
  <data name="DropDatabaseZipped" xml:space="preserve">
    <value>H4sIAAAAAAAAC3u/e79LkH+AQrCzh6uvo4Knm4JrhGdwSLBCcVJKhoKzY7Czo4urNS8XdkXJiTk5SYnJ2QQVFpcmFScXZRaUZObnFRM2NqmMoJrUguRMwiaVFqcWIVQBAOPdp4/tAAAA</value>
  </data>
  <data name="EventQuery" xml:space="preserve">
    <value>SELECT request.record_time as capture_time, event.id, event_type as type, event.record_time as event_time, action, read_point, event_timezone_offset, disposition, business_location, business_step, transformation_id, event.event_id, declaration_time, reason FROM epcis.event JOIN epcis.request on request.id = event.request_id LEFT JOIN epcis.error_declaration ed ON event.id = ed.event_id /**where**/ /**orderby**/ LIMIT @limit</value>
  </data>
  <data name="RelatedQuery" xml:space="preserve">
    <value>SELECT event_id, epc as id, type, is_quantity, quantity, unit_of_measure FROM epcis.epc WHERE event_id = ANY(@EventIds);
SELECT event_id, field_id as id, parent_id, namespace, name, type, text_value, numeric_value, date_value FROM epcis.custom_field WHERE event_id = ANY(@EventIds);
SELECT event_id, transaction_type as type, transaction_id as id FROM epcis.business_transaction WHERE event_id = ANY(@EventIds);
SELECT event_id, type, source_dest_id as id, direction FROM epcis.source_destination WHERE event_id = ANY(@EventIds);
SELECT event_id, corrective_eventid as corrective_id FROM epcis.error_declaration_eventid WHERE event_id = ANY(@EventIds);</value>
  </data>
  <data name="StoreBusinessTransaction" xml:space="preserve">
    <value>INSERT INTO epcis.business_transaction(event_id, transaction_type, transaction_id) VALUES (@EventId, @Type, @Id);</value>
  </data>
  <data name="StoreCustomField" xml:space="preserve">
    <value>INSERT INTO epcis.custom_field(event_id, field_id, parent_id, namespace, name, type, text_value, numeric_value, date_value) VALUES (@EventId, @Id, @ParentId, @Namespace, @Name, @Type, @TextValue, @NumericValue, @DateValue);</value>
  </data>
  <data name="StoreEpcs" xml:space="preserve">
    <value>INSERT INTO epcis.epc(event_id, epc, type, is_quantity, quantity, unit_of_measure) VALUES (@EventId, @Id, @Type, @IsQuantity, @Quantity, @UnitOfMeasure);</value>
  </data>
  <data name="StoreErrorDeclaration" xml:space="preserve">
    <value>INSERT INTO epcis.error_declaration(event_id, declaration_time, reason) VALUES(@EventId, @DeclarationTime, @Reason);</value>
  </data>
  <data name="StoreErrorDeclarationIds" xml:space="preserve">
    <value>INSERT INTO epcis.error_declaration_eventid(event_id, corrective_eventid) VALUES(@EventId, @CorrectiveId);</value>
  </data>
  <data name="StoreEvent" xml:space="preserve">
    <value>INSERT INTO epcis.event(id, request_id, record_time, action, event_type, event_timezone_offset, business_location, business_step, disposition, read_point, transformation_id, event_id) VALUES(@Id, @RequestId, @EventTime, @Action, @Type, @EventTimeZoneOffset, @BusinessLocation, @BusinessStep, @Disposition, @ReadPoint, @TransformationId, @EventId);</value>
  </data>
  <data name="StoreRequest" xml:space="preserve">
    <value>INSERT INTO epcis.request(id, document_time, record_time, user_id) VALUES(@Id, @DocumentTime, @RecordTime, @UserId);</value>
  </data>
  <data name="StoreSourceDestination" xml:space="preserve">
    <value>INSERT INTO epcis.source_destination(event_id, type, source_dest_id, direction) VALUES (@EventId, @Type, @Id, @Direction);</value>
  </data>
  <data name="SubscriptionStore" xml:space="preserve">
    <value>INSERT INTO subscriptions.subscription(id, subscription_id, trigger, initial_record_time, report_if_empty, destination, query_name,  active, schedule_seconds, schedule_minutes, schedule_hours, schedule_month, schedule_day_of_month, schedule_day_of_week) VALUES(@Id, @SubscriptionId, @Trigger, @InitialRecordTime, @ReportIfEmpty, @Destination, @QueryName, @Active, @Second, @Minute, @Hour, @Month, @DayOfMonth, @DayOfWeek);</value>
  </data>
  <data name="SubscriptionAcknowledgePendingRequests" xml:space="preserve">
    <value>DELETE FROM subscriptions.pendingrequest WHERE subscription_id = (SELECT id FROM subscriptions.subscription WHERE subscription_id = @SubscriptionId) AND request_id = ANY(@RequestId)</value>
  </data>
  <data name="SubscriptionDelete" xml:space="preserve">
    <value>DELETE from subscriptions.subscription WHERE subscription_id = @Id;</value>
  </data>
  <data name="SubscriptionListIds" xml:space="preserve">
    <value>SELECT s.id, s.subscription_id, s.query_name, s.active FROM subscriptions.subscription s</value>
  </data>
  <data name="SubscriptionListPendingRequestIds" xml:space="preserve">
    <value>SELECT pr.request_id FROM subscriptions.pendingrequest pr JOIN subscriptions.subscription s ON s.id = pr.subscription_id WHERE s.subscription_id = @SubscriptionId</value>
  </data>
  <data name="SubscriptionsList" xml:space="preserve">
    <value>SELECT s.id, s.destination, s.subscription_id, s.query_name, s.active, s.trigger, s.report_if_empty, s.schedule_minutes, s.schedule_seconds, s.schedule_hours, s.schedule_month, s.schedule_day_of_month, s.schedule_day_of_week FROM subscriptions.subscription s</value>
  </data>
  <data name="SubscriptionStoreParameter" xml:space="preserve">
    <value>INSERT INTO subscriptions.parameter(id, subscription_id, name) VALUES(@Id, @SubscriptionId, @Name)</value>
  </data>
  <data name="SubscriptionStoreParameterValue" xml:space="preserve">
    <value>INSERT INTO subscriptions.parameter_value(id, parameter_id, value) VALUES(@Id, @ParameterId, @Value);</value>
  </data>
  <data name="SubscriptionListParameters" xml:space="preserve">
    <value>SELECT p.subscription_id, p.name, pv.value FROM subscriptions.parameter p INNER JOIN subscriptions.parameter_value pv ON pv.parameter_id = p.id</value>
  </data>
  <data name="SubscriptionStoreTrigger" xml:space="preserve">
    <value>INSERT INTO subscriptions.trigger(id, subscription_id, trigger_time, status, reason) VALUES(@Id, (SELECT id FROM subscriptions.subscription WHERE subscription_id = @SubscriptionId), NOW(), @Status, @Reason);</value>
  </data>
  <data name="MasterDataAttributeInsert" xml:space="preserve">
    <value>INSERT INTO cbv.attribute(masterdata_id, masterdata_type, id, value) VALUES(@ParentId, @ParentType, @Id, @Value) ON CONFLICT ON CONSTRAINT pk_cbv_masterdata_attribute DO UPDATE SET value = @Value;</value>
  </data>
  <data name="MasterDataInsert" xml:space="preserve">
    <value>INSERT INTO cbv.masterdata(id, type, created_on, last_update) VALUES(@Id, @Type, NOW(), NOW()) ON CONFLICT ON CONSTRAINT pk_cbv_masterdata DO UPDATE SET last_update = NOW();</value>
  </data>
  <data name="MasterDataQuery" xml:space="preserve">
    <value>SELECT md.type, md.id FROM cbv.masterdata md /**where**/ ORDER BY md.last_update DESC LIMIT @limit</value>
  </data>
  <data name="UserLoadByName" xml:space="preserve">
    <value>SELECT id, username, password FROM users.user WHERE username = @Username</value>
  </data>
  <data name="MasterDataHierarchyInsert" xml:space="preserve">
    <value>INSERT INTO cbv.hierarchy(type, parent_id, children_id) VALUES(@Type, @ParentId, @ChildrenId);</value>
  </data>
  <data name="MasterDataAttributeFieldInsert" xml:space="preserve">
    <value>INSERT INTO cbv.attribute_field(internal_id, internal_parent_id, masterdata_id, masterdata_type, parent_id, name, namespace, value) VALUES(@Id, @InternalParentId, @MasterdataId, @MasterdataType, @ParentId, @Name, @Namespace, @Value);</value>
  </data>
  <data name="MasterDataDelete" xml:space="preserve">
    <value>DELETE FROM cbv.attribute_field WHERE masterdata_type = @Type AND masterdata_id = @Id; DELETE FROM cbv.hierarchy WHERE type = @Type AND (parent_id = @Id OR children_id = @Id); DELETE FROM cbv.attribute WHERE masterdata_id = @Id AND masterdata_type = @Type; DELETE FROM cbv.masterdata WHERE id = @Id AND type = @Type;</value>
  </data>
  <data name="MasterDataAttributeQuery" xml:space="preserve">
    <value>SELECT masterdata_type AS parent_type, masterdata_id AS parent_id, id, value FROM cbv.attribute WHERE masterdata_id = ANY(@Ids) AND id = ANY(@Attributes)</value>
  </data>
  <data name="MasterDataAllAttributeQuery" xml:space="preserve">
    <value>SELECT masterdata_type AS parent_type, masterdata_id AS parent_id, id, value FROM cbv.attribute WHERE masterdata_id = ANY(@Ids)</value>
  </data>
  <data name="StoreQueryCallback" xml:space="preserve">
    <value>INSERT INTO callback.query_callback(id, request_id, subscription_id, callback_type) VALUES(@Id, @RequestId, @SubscriptionId, @CallbackType);</value>
  </data>
  <data name="StoreStandardHeader" xml:space="preserve">
    <value>INSERT INTO sbdh.standardheader(id, version, standard, type_version, identifier, type, creation_datetime) VALUES(@Id, @Version, @Standard, @TypeVersion, @InstanceIdentifier, @Type, @CreationDateTime);</value>
  </data>
  <data name="StoreStandardHeaderContactInformations" xml:space="preserve">
    <value>INSERT INTO sbdh.contactinformation(id, header_id, type, identifier, contact, email, fax_number, phone_number, type_identifier) VALUES(@Id, @HeaderId, @Type, @Identifier, @Contact, @EmailAddress, @FaxNumber, @TelephoneNumber, @ContactTypeIdentifier);</value>
  </data>
</root>
